name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-elm-image:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Base.Dockerfile
          platforms: linux/amd64
          tags: elm-compiled:latest
          outputs: type=docker,dest=/tmp/elm-compiled.tar
      -
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: elm-compiled
          path: /tmp/elm-compiled.tar
  extract:
    runs-on: ubuntu-latest
    needs: build-elm-image
    steps:
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: elm-compiled
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/elm-compiled.tar
          docker image ls -a
      - 
        uses: shrink/actions-docker-extract@v2
        id: extract
        with:
          image: elm-compiled
          path: /home/node/app/client/.
      - 
        name: Upload client
        uses: actions/upload-artifact@v2
        with:
          path: ${{ steps.extract.outputs.destination }}
          name: client
  build-node:
    runs-on: ubuntu-latest
    needs: extract
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: client
          path: ./client
      - 
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCRTOKEN }}
      - 
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Node.Dockerfile
          platforms: linux/arm64, linux/amd64, linux/arm/v7
          push: true
          tags: ghcr.io/aglide100/swarm-dashboard:withoutHealthCheck
          # tags: ghcr.io/aglide100/swarm-dashboard:latest